TOOLCHAIN = g++ -std=c++20

NATURALS_OBJ = NaturalNumbers.o COM_NN_D.o NZER_N_B.o ADD_1N_N.o ADD_NN_N.o SUB_NN_N.o MUL_ND_N.o MUL_Nk_N.o MUL_NN_N.o SUB_NDN_N.o DIV_NN_Dk.o DIV_NN_N.o MOD_NN_N.o GCF_NN_N.o LCM_NN_N.o

INTEGERS_OBJ = Integer.o ABS_Z_N.o POZ_Z_D.o MUL_ZM_Z.o TRANS_N_Z.o TRANS_Z_N.o ADD_ZZ_Z.o SUB_ZZ_Z.o MUL_ZZ_Z.o DIV_ZZ_Z.o MOD_ZZ_Z.o

RATIONALS_OBJ = Rationals.o RED_Q_Q.o INT_Q_B.o TRANS_Z_Q.o TRANS_Q_Z.o ADD_QQ_Q.o SUB_QQ_Q.o MUL_QQ_Q.o DIV_QQ_Q.o

POLYNOMIALS_OBJ = Polynomials.o ADD_PP_P.o SUB_PP_P.o MUL_PQ_P.o MUL_Pxk_P.o LED_P_Q.o DEG_P_N.o FAC_P_Q.o MUL_PP_P.o DIV_PP_P.o MOD_PP_P.o GCF_PP_P.o DER_P_P.o NMR_P_P.o

OBJS = main.o $(NATURALS_OBJ) $(INTEGERS_OBJ) $(RATIONALS_OBJ) $(POLYNOMIALS_OBJ)

NATURAL_PATH = ../NaturalNumbers/
INTEGER_PATH = ../Integer/
RATIONALS_PATH = ../Rationals/
POLYNOM_PATH = ../Polynomials/
FPATH = Functions/
SPATH = Source/

HEADERS_FOR_MAIN_NATURALS = $(NATURAL_PATH)$(FPATH)COM_NN_D/COM_NN_D.h $(NATURAL_PATH)$(FPATH)NZER_N_B/NZER_N_B.h $(NATURAL_PATH)$(FPATH)ADD_1N_N/ADD_1N_N.h $(NATURAL_PATH)$(FPATH)ADD_NN_N/ADD_NN_N.h $(NATURAL_PATH)$(FPATH)SUB_NN_N/SUB_NN_N.h $(NATURAL_PATH)$(FPATH)MUL_ND_N/MUL_ND_N.h $(NATURAL_PATH)$(FPATH)MUL_Nk_N/MUL_Nk_N.h $(NATURAL_PATH)$(FPATH)MUL_NN_N/MUL_NN_N.h $(NATURAL_PATH)$(FPATH)SUB_NDN_N/SUB_NDN_N.h $(NATURAL_PATH)$(FPATH)DIV_NN_Dk/DIV_NN_Dk.h $(NATURAL_PATH)$(FPATH)DIV_NN_N/DIV_NN_N.h $(NATURAL_PATH)$(FPATH)MOD_NN_N/MOD_NN_N.h $(NATURAL_PATH)$(FPATH)GCF_NN_N/GCF_NN_N.h $(NATURAL_PATH)$(FPATH)LCM_NN_N/LCM_NN_N.h

HEADERS_FOR_MAIN_INTEGERS = $(INTEGER_PATH)$(FPATH)ABS_Z_N/ABS_Z_N.h $(INTEGER_PATH)$(FPATH)POZ_Z_D/POZ_Z_D.h $(INTEGER_PATH)$(FPATH)MUL_ZM_Z/MUL_ZM_Z.h $(INTEGER_PATH)$(FPATH)TRANS_N_Z/TRANS_N_Z.h $(INTEGER_PATH)$(FPATH)TRANS_Z_N/TRANS_Z_N.h $(INTEGER_PATH)$(FPATH)ADD_ZZ_Z/ADD_ZZ_Z.h $(INTEGER_PATH)$(FPATH)SUB_ZZ_Z/SUB_ZZ_Z.h $(INTEGER_PATH)$(FPATH)MUL_ZZ_Z/MUL_ZZ_Z.h $(INTEGER_PATH)$(FPATH)DIV_ZZ_Z/DIV_ZZ_Z.h $(INTEGER_PATH)$(FPATH)MOD_ZZ_Z/MOD_ZZ_Z.h

HEADERS_FOR_MAIN_RATIONALS = $(RATIONALS_PATH)$(FPATH)RED_Q_Q/RED_Q_Q.h $(RATIONALS_PATH)$(FPATH)INT_Q_B/INT_Q_B.h $(RATIONALS_PATH)$(FPATH)TRANS_Z_Q/TRANS_Z_Q.h $(RATIONALS_PATH)$(FPATH)TRANS_Q_Z/TRANS_Q_Z.h $(RATIONALS_PATH)$(FPATH)ADD_QQ_Q/ADD_QQ_Q.h $(RATIONALS_PATH)$(FPATH)SUB_QQ_Q/SUB_QQ_Q.h $(RATIONALS_PATH)$(FPATH)MUL_QQ_Q/MUL_QQ_Q.h $(RATIONALS_PATH)$(FPATH)DIV_QQ_Q/DIV_QQ_Q.h  

HEADERS_FOR_MAIN_POLYNOMIALS = $(POLYNOM_PATH)$(FPATH)ADD_PP_P/ADD_PP_P.h $(POLYNOM_PATH)$(FPATH)SUB_PP_P/SUB_PP_P.h $(POLYNOM_PATH)$(FPATH)MUL_PQ_P/MUL_PQ_P.h $(POLYNOM_PATH)$(FPATH)MUL_Pxk_P/MUL_Pxk_P.h $(POLYNOM_PATH)$(FPATH)LED_P_Q/LED_P_Q.h $(POLYNOM_PATH)$(FPATH)DEG_P_N/DEG_P_N.h $(POLYNOM_PATH)$(FPATH)FAC_P_Q/FAC_P_Q.h $(POLYNOM_PATH)$(FPATH)MUL_PP_P/MUL_PP_P.h $(POLYNOM_PATH)$(FPATH)DIV_PP_P/DIV_PP_P.h $(POLYNOM_PATH)$(FPATH)MOD_PP_P/MOD_PP_P.h $(POLYNOM_PATH)$(FPATH)GCF_PP_P/GCF_PP_P.h $(POLYNOM_PATH)$(FPATH)DER_P_P/DER_P_P.h $(POLYNOM_PATH)$(FPATH)NMR_P_P/NMR_P_P.h 

HEADERS_FOR_MAIN = main.cpp $(HEADERS_FOR_MAIN_NATURALS) $(HEADERS_FOR_MAIN_INTEGERS)

NaturalNumbers_HEADERS = $(NATURAL_PATH)$(SPATH)NaturalNumbers.cpp $(NATURAL_PATH)$(SPATH)NaturalNumbers.h
NaturalNumbers_CPP_PATH = $(NATURAL_PATH)$(SPATH)NaturalNumbers.cpp

INTEGERS_HEADERS = $(INTEGER_PATH)$(SPATH)Integer.cpp $(INTEGER_PATH)$(SPATH)Integer.h
INTEGERS_CPP_PATH = $(INTEGER_PATH)$(SPATH)Integer.cpp

RATIONALS_HEADERS = $(RATIONALS_PATH)$(SPATH)Rationals.cpp $(RATIONALS_PATH)$(SPATH)Rationals.h
RATIONALS_CPP_PATH = $(RATIONALS_PATH)$(SPATH)Rationals.cpp 

POLYNOMIALS_HEADERS = $(POLYNOM_PATH)$(SPATH)Polynomials.cpp $(POLYNOM_PATH)$(SPATH)Polynomials.h
POLYNOMIALS_CPP_PATH = $(POLYNOM_PATH)$(SPATH)Polynomials.cpp

COM_NN_D_HEADERS = $(NATURAL_PATH)$(FPATH)COM_NN_D/COM_NN_D.cpp $(NATURAL_PATH)$(FPATH)COM_NN_D/COM_NN_D.h
COM_NN_D_CPP_PATH = $(NATURAL_PATH)$(FPATH)COM_NN_D/COM_NN_D.cpp

NZER_N_B_HEADERS = $(NATURAL_PATH)$(FPATH)NZER_N_B/NZER_N_B.cpp $(NATURAL_PATH)$(FPATH)NZER_N_B/NZER_N_B.h
NZER_N_B_CPP_PATH = $(NATURAL_PATH)$(FPATH)NZER_N_B/NZER_N_B.cpp

ADD_1N_N_HEADERS = $(NATURAL_PATH)$(FPATH)ADD_1N_N/ADD_1N_N.cpp $(NATURAL_PATH)$(FPATH)ADD_1N_N/ADD_1N_N.h
ADD_1N_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)ADD_1N_N/ADD_1N_N.cpp 

ADD_NN_N_HEADERS = $(NATURAL_PATH)$(FPATH)ADD_NN_N/ADD_NN_N.cpp $(NATURAL_PATH)$(FPATH)ADD_NN_N/ADD_NN_N.h
ADD_NN_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)ADD_NN_N/ADD_NN_N.cpp

SUB_NN_N_HEADERS = $(NATURAL_PATH)$(FPATH)SUB_NN_N/SUB_NN_N.cpp $(NATURAL_PATH)$(FPATH)SUB_NN_N/SUB_NN_N.h
SUB_NN_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)SUB_NN_N/SUB_NN_N.cpp

MUL_ND_N_HEADERS = $(NATURAL_PATH)$(FPATH)MUL_ND_N/MUL_ND_N.cpp $(NATURAL_PATH)$(FPATH)MUL_ND_N/MUL_ND_N.h
MUL_ND_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)MUL_ND_N/MUL_ND_N.cpp

MUL_Nk_N_HEADERS = $(NATURAL_PATH)$(FPATH)MUL_Nk_N/MUL_Nk_N.cpp $(NATURAL_PATH)$(FPATH)MUL_Nk_N/MUL_Nk_N.h
MUL_Nk_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)MUL_Nk_N/MUL_Nk_N.cpp

MUL_NN_N_HEADERS = $(NATURAL_PATH)$(FPATH)MUL_NN_N/MUL_NN_N.cpp $(NATURAL_PATH)$(FPATH)MUL_NN_N/MUL_NN_N.h
MUL_NN_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)MUL_NN_N/MUL_NN_N.cpp

SUB_NDN_N_HEADERS = $(NATURAL_PATH)$(FPATH)SUB_NDN_N/SUB_NDN_N.cpp $(NATURAL_PATH)$(FPATH)SUB_NDN_N/SUB_NDN_N.h
SUB_NDN_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)SUB_NDN_N/SUB_NDN_N.cpp

DIV_NN_Dk_HEADERS = $(NATURAL_PATH)$(FPATH)DIV_NN_Dk/DIV_NN_Dk.cpp $(NATURAL_PATH)$(FPATH)DIV_NN_Dk/DIV_NN_Dk.h
DIV_NN_Dk_CPP_PATH = $(NATURAL_PATH)$(FPATH)DIV_NN_Dk/DIV_NN_Dk.cpp

DIV_NN_N_HEADERS = $(NATURAL_PATH)$(FPATH)DIV_NN_N/DIV_NN_N.cpp $(NATURAL_PATH)$(FPATH)DIV_NN_N/DIV_NN_N.h
DIV_NN_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)DIV_NN_N/DIV_NN_N.cpp

MOD_NN_N_HEADERS = $(NATURAL_PATH)$(FPATH)MOD_NN_N/MOD_NN_N.cpp $(NATURAL_PATH)$(FPATH)MOD_NN_N/MOD_NN_N.h
MOD_NN_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)MOD_NN_N/MOD_NN_N.cpp

GCF_NN_N_HEADERS = $(NATURAL_PATH)$(FPATH)GCF_NN_N/GCF_NN_N.cpp $(NATURAL_PATH)$(FPATH)GCF_NN_N/GCF_NN_N.h
GCF_NN_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)GCF_NN_N/GCF_NN_N.cpp

LCM_NN_N_HEADERS = $(NATURAL_PATH)$(FPATH)LCM_NN_N/LCM_NN_N.cpp $(NATURAL_PATH)$(FPATH)LCM_NN_N/LCM_NN_N.h
LCM_NN_N_CPP_PATH = $(NATURAL_PATH)$(FPATH)LCM_NN_N/LCM_NN_N.cpp

ABS_Z_N_HEADERS = $(INTEGER_PATH)$(FPATH)ABS_Z_N/ABS_Z_N.cpp $(INTEGER_PATH)$(FPATH)ABS_Z_N/ABS_Z_N.h
ABS_Z_N_CPP_PATH = $(INTEGER_PATH)$(FPATH)ABS_Z_N/ABS_Z_N.cpp

POZ_Z_D_HEADERS = $(INTEGER_PATH)$(FPATH)POZ_Z_D/POZ_Z_D.cpp $(INTEGER_PATH)$(FPATH)POZ_Z_D/POZ_Z_D.h
POZ_Z_D_CPP_PATH = $(INTEGER_PATH)$(FPATH)POZ_Z_D/POZ_Z_D.cpp

MUL_ZM_Z_HEADERS = $(INTEGER_PATH)$(FPATH)MUL_ZM_Z/MUL_ZM_Z.cpp $(INTEGER_PATH)$(FPATH)MUL_ZM_Z/MUL_ZM_Z.h
MUL_ZM_Z_CPP_PATH = $(INTEGER_PATH)$(FPATH)MUL_ZM_Z/MUL_ZM_Z.cpp

TRANS_N_Z_HEADERS = $(INTEGER_PATH)$(FPATH)TRANS_N_Z/TRANS_N_Z.cpp $(INTEGER_PATH)$(FPATH)TRANS_N_Z/TRANS_N_Z.h
TRANS_N_Z_CPP_PATH = $(INTEGER_PATH)$(FPATH)TRANS_N_Z/TRANS_N_Z.cpp

TRANS_Z_N_HEADERS = $(INTEGER_PATH)$(FPATH)TRANS_Z_N/TRANS_Z_N.cpp $(INTEGER_PATH)$(FPATH)TRANS_Z_N/TRANS_Z_N.h
TRANS_Z_N_CPP_PATH = $(INTEGER_PATH)$(FPATH)TRANS_Z_N/TRANS_Z_N.cpp

ADD_ZZ_Z_HEADERS = $(INTEGER_PATH)$(FPATH)ADD_ZZ_Z/ADD_ZZ_Z.cpp $(INTEGER_PATH)$(FPATH)ADD_ZZ_Z/ADD_ZZ_Z.h
ADD_ZZ_Z_CPP_PATH = $(INTEGER_PATH)$(FPATH)ADD_ZZ_Z/ADD_ZZ_Z.cpp

SUB_ZZ_Z_HEADERS = $(INTEGER_PATH)$(FPATH)SUB_ZZ_Z/SUB_ZZ_Z.cpp $(INTEGER_PATH)$(FPATH)SUB_ZZ_Z/SUB_ZZ_Z.h
SUB_ZZ_Z_CPP_PATH = $(INTEGER_PATH)$(FPATH)SUB_ZZ_Z/SUB_ZZ_Z.cpp

MUL_ZZ_Z_HEADERS = $(INTEGER_PATH)$(FPATH)MUL_ZZ_Z/MUL_ZZ_Z.cpp $(INTEGER_PATH)$(FPATH)MUL_ZZ_Z/MUL_ZZ_Z.h
MUL_ZZ_Z_CPP_PATH = $(INTEGER_PATH)$(FPATH)MUL_ZZ_Z/MUL_ZZ_Z.cpp

DIV_ZZ_Z_HEADERS = $(INTEGER_PATH)$(FPATH)DIV_ZZ_Z/DIV_ZZ_Z.cpp $(INTEGER_PATH)$(FPATH)DIV_ZZ_Z/DIV_ZZ_Z.h
DIV_ZZ_Z_CPP_PATH = $(INTEGER_PATH)$(FPATH)DIV_ZZ_Z/DIV_ZZ_Z.cpp

MOD_ZZ_Z_HEADERS = $(INTEGER_PATH)$(FPATH)MOD_ZZ_Z/MOD_ZZ_Z.cpp $(INTEGER_PATH)$(FPATH)MOD_ZZ_Z/MOD_ZZ_Z.h
MOD_ZZ_Z_CPP_PATH = $(INTEGER_PATH)$(FPATH)MOD_ZZ_Z/MOD_ZZ_Z.cpp

RED_Q_Q_HEADERS = $(RATIONALS_PATH)$(FPATH)RED_Q_Q/RED_Q_Q.cpp $(RATIONALS_PATH)$(FPATH)RED_Q_Q/RED_Q_Q.h
RED_Q_Q_CPP_PATH = $(RATIONALS_PATH)$(FPATH)RED_Q_Q/RED_Q_Q.cpp

INT_Q_B_HEADERS = $(RATIONALS_PATH)$(FPATH)INT_Q_B/INT_Q_B.cpp $(RATIONALS_PATH)$(FPATH)INT_Q_B/INT_Q_B.h
INT_Q_B_CPP_PATH = $(RATIONALS_PATH)$(FPATH)INT_Q_B/INT_Q_B.cpp

TRANS_Z_Q_HEADERS = $(RATIONALS_PATH)$(FPATH)TRANS_Z_Q/TRANS_Z_Q.cpp $(RATIONALS_PATH)$(FPATH)TRANS_Z_Q/TRANS_Z_Q.h
TRANS_Z_Q_CPP_PATH = $(RATIONALS_PATH)$(FPATH)TRANS_Z_Q/TRANS_Z_Q.cpp

TRANS_Q_Z_HEADERS = $(RATIONALS_PATH)$(FPATH)TRANS_Q_Z/TRANS_Q_Z.cpp $(RATIONALS_PATH)$(FPATH)TRANS_Q_Z/TRANS_Q_Z.h
TRANS_Q_Z_CPP_PATH = $(RATIONALS_PATH)$(FPATH)TRANS_Q_Z/TRANS_Q_Z.cpp

ADD_QQ_Q_HEADERS = $(RATIONALS_PATH)$(FPATH)ADD_QQ_Q/ADD_QQ_Q.cpp $(RATIONALS_PATH)$(FPATH)ADD_QQ_Q/ADD_QQ_Q.h
ADD_QQ_Q_CPP_PATH = $(RATIONALS_PATH)$(FPATH)ADD_QQ_Q/ADD_QQ_Q.cpp

SUB_QQ_Q_HEADERS = $(RATIONALS_PATH)$(FPATH)SUB_QQ_Q/SUB_QQ_Q.cpp $(RATIONALS_PATH)$(FPATH)SUB_QQ_Q/SUB_QQ_Q.h
SUB_QQ_Q_CPP_PATH = $(RATIONALS_PATH)$(FPATH)SUB_QQ_Q/SUB_QQ_Q.cpp

MUL_QQ_Q_HEADERS = $(RATIONALS_PATH)$(FPATH)MUL_QQ_Q/MUL_QQ_Q.cpp $(RATIONALS_PATH)$(FPATH)MUL_QQ_Q/MUL_QQ_Q.h
MUL_QQ_Q_CPP_PATH = $(RATIONALS_PATH)$(FPATH)MUL_QQ_Q/MUL_QQ_Q.cpp

DIV_QQ_Q_HEADERS = $(RATIONALS_PATH)$(FPATH)DIV_QQ_Q/DIV_QQ_Q.cpp $(RATIONALS_PATH)$(FPATH)DIV_QQ_Q/DIV_QQ_Q.h
DIV_QQ_Q_CPP_PATH = $(RATIONALS_PATH)$(FPATH)DIV_QQ_Q/DIV_QQ_Q.cpp

ADD_PP_P_HEADERS = $(POLYNOM_PATH)$(FPATH)ADD_PP_P/ADD_PP_P.cpp $(POLYNOM_PATH)$(FPATH)ADD_PP_P/ADD_PP_P.h
ADD_PP_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)ADD_PP_P/ADD_PP_P.cpp

SUB_PP_P_HEADERS = $(POLYNOM_PATH)$(FPATH)SUB_PP_P/SUB_PP_P.cpp $(POLYNOM_PATH)$(FPATH)SUB_PP_P/SUB_PP_P.h
SUB_PP_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)SUB_PP_P/SUB_PP_P.cpp

MUL_PQ_P_HEADERS = $(POLYNOM_PATH)$(FPATH)MUL_PQ_P/MUL_PQ_P.cpp $(POLYNOM_PATH)$(FPATH)MUL_PQ_P/MUL_PQ_P.h
MUL_PQ_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)MUL_PQ_P/MUL_PQ_P.cpp

MUL_PXK_P_HEADERS = $(POLYNOM_PATH)$(FPATH)MUL_Pxk_P/MUL_Pxk_P.cpp $(POLYNOM_PATH)$(FPATH)MUL_Pxk_P/MUL_Pxk_P.h
MUL_PXK_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)MUL_Pxk_P/MUL_Pxk_P.cpp

LED_P_Q_HEADERS = $(POLYNOM_PATH)$(FPATH)LED_P_Q/LED_P_Q.cpp $(POLYNOM_PATH)$(FPATH)LED_P_Q/LED_P_Q.h
LED_P_Q_CPP_PATH = $(POLYNOM_PATH)$(FPATH)LED_P_Q/LED_P_Q.cpp

DEG_P_N_HEADERS = $(POLYNOM_PATH)$(FPATH)DEG_P_N/DEG_P_N.cpp $(POLYNOM_PATH)$(FPATH)DEG_P_N/DEG_P_N.h
DEG_P_N_CPP_PATH = $(POLYNOM_PATH)$(FPATH)DEG_P_N/DEG_P_N.cpp

FAC_P_Q_HEADERS = $(POLYNOM_PATH)$(FPATH)FAC_P_Q/FAC_P_Q.cpp $(POLYNOM_PATH)$(FPATH)FAC_P_Q/FAC_P_Q.h
FAC_P_Q_CPP_PATH = $(POLYNOM_PATH)$(FPATH)FAC_P_Q/FAC_P_Q.cpp

MUL_PP_P_HEADERS = $(POLYNOM_PATH)$(FPATH)MUL_PP_P/MUL_PP_P.cpp $(POLYNOM_PATH)$(FPATH)MUL_PP_P/MUL_PP_P.h
MUL_PP_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)MUL_PP_P/MUL_PP_P.cpp

DIV_PP_P_HEADERS = $(POLYNOM_PATH)$(FPATH)DIV_PP_P/DIV_PP_P.cpp $(POLYNOM_PATH)$(FPATH)DIV_PP_P/DIV_PP_P.h
DIV_PP_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)DIV_PP_P/DIV_PP_P.cpp

MOD_PP_P_HEADERS = $(POLYNOM_PATH)$(FPATH)MOD_PP_P/MOD_PP_P.cpp $(POLYNOM_PATH)$(FPATH)MOD_PP_P/MOD_PP_P.h
MOD_PP_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)MOD_PP_P/MOD_PP_P.cpp

GCF_PP_P_HEADERS = $(POLYNOM_PATH)$(FPATH)GCF_PP_P/GCF_PP_P.cpp $(POLYNOM_PATH)$(FPATH)GCF_PP_P/GCF_PP_P.h
GCF_PP_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)GCF_PP_P/GCF_PP_P.cpp

DER_P_P_HEADERS = $(POLYNOM_PATH)$(FPATH)DER_P_P/DER_P_P.cpp $(POLYNOM_PATH)$(FPATH)DER_P_P/DER_P_P.h
DER_P_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)DER_P_P/DER_P_P.cpp

NMR_P_P_HEADERS = $(POLYNOM_PATH)$(FPATH)NMR_P_P/NMR_P_P.cpp $(POLYNOM_PATH)$(FPATH)NMR_P_P/NMR_P_P.h
NMR_P_P_CPP_PATH = $(POLYNOM_PATH)$(FPATH)NMR_P_P/NMR_P_P.cpp

all: $(OBJS)
	$(TOOLCHAIN) $(OBJS) -o programm

main.o: $(HEADERS_FOR_MAIN) mainUtils.h
	$(TOOLCHAIN) -c main.cpp

NaturalNumbers.o: $(NaturalNumbers_HEADERS)
	$(TOOLCHAIN) -c $(NaturalNumbers_CPP_PATH)

Integer.o: $(INTEGERS_HEADERS)
	$(TOOLCHAIN) -c $(INTEGERS_CPP_PATH)

Rationals.o: $(RATIONALS_HEADERS)
	$(TOOLCHAIN) -c $(RATIONALS_CPP_PATH)

Polynomials.o: $(POLYNOMIALS_HEADERS)
	$(TOOLCHAIN) -c $(POLYNOMIALS_CPP_PATH)

COM_NN_D.o: $(COM_NN_D_HEADERS)
	$(TOOLCHAIN) -c $(COM_NN_D_CPP_PATH)

NZER_N_B.o: $(NZER_N_B_HEADERS)
	$(TOOLCHAIN) -c $(NZER_N_B_CPP_PATH)

ADD_1N_N.o: $(ADD_1N_N_HEADERS)
	$(TOOLCHAIN) -c $(ADD_1N_N_CPP_PATH)

ADD_NN_N.o: $(ADD_NN_N_HEADERS)
	$(TOOLCHAIN) -c $(ADD_NN_N_CPP_PATH)

SUB_NN_N.o: $(SUB_NN_N_HEADERS)
	$(TOOLCHAIN) -c $(SUB_NN_N_CPP_PATH)

MUL_ND_N.o: $(MUL_ND_N_HEADERS)
	$(TOOLCHAIN) -c $(MUL_ND_N_CPP_PATH)

MUL_Nk_N.o: $(MUL_Nk_N_HEADERS)
	$(TOOLCHAIN) -c $(MUL_Nk_N_CPP_PATH)

MUL_NN_N.o: $(MUL_NN_N_HEADERS)
	$(TOOLCHAIN) -c $(MUL_NN_N_CPP_PATH)

SUB_NDN_N.o: $(SUB_NDN_N_HEADERS)
	$(TOOLCHAIN) -c $(SUB_NDN_N_CPP_PATH)

DIV_NN_Dk.o: $(DIV_NN_Dk_HEADERS)
	$(TOOLCHAIN) -c $(DIV_NN_Dk_CPP_PATH)

DIV_NN_N.o: $(DIV_NN_N_HEADERS)
	$(TOOLCHAIN) -c $(DIV_NN_N_CPP_PATH)

MOD_NN_N.o: $(MOD_NN_N_HEADERS)
	$(TOOLCHAIN) -c $(MOD_NN_N_CPP_PATH)

GCF_NN_N.o: $(GCF_NN_N_HEADERS)
	$(TOOLCHAIN) -c $(GCF_NN_N_CPP_PATH)

LCM_NN_N.o: $(LCM_NN_N_HEADERS)
	$(TOOLCHAIN) -c $(LCM_NN_N_CPP_PATH)

ABS_Z_N.o: $(ABS_Z_N_HEADERS)
	$(TOOLCHAIN) -c $(ABS_Z_N_CPP_PATH)

POZ_Z_D.o: $(POZ_Z_D_HEADERS)
	$(TOOLCHAIN) -c $(POZ_Z_D_CPP_PATH)

MUL_ZM_Z.o: $(MUL_ZM_Z_HEADERS)
	$(TOOLCHAIN) -c $(MUL_ZM_Z_CPP_PATH)

TRANS_N_Z.o: $(TRANS_N_Z_HEADERS)
	$(TOOLCHAIN) -c $(TRANS_N_Z_CPP_PATH)

TRANS_Z_N.o: $(TRANS_Z_N_HEADERS)
	$(TOOLCHAIN) -c $(TRANS_Z_N_CPP_PATH)

ADD_ZZ_Z.o: $(ADD_ZZ_Z_HEADERS)
	$(TOOLCHAIN) -c $(ADD_ZZ_Z_CPP_PATH)

SUB_ZZ_Z.o: $(SUB_ZZ_Z_HEADERS)
	$(TOOLCHAIN) -c $(SUB_ZZ_Z_CPP_PATH)

MUL_ZZ_Z.o: $(MUL_ZZ_Z_HEADERS)
	$(TOOLCHAIN) -c $(MUL_ZZ_Z_CPP_PATH)

DIV_ZZ_Z.o: $(DIV_ZZ_Z_HEADERS)
	$(TOOLCHAIN) -c $(DIV_ZZ_Z_CPP_PATH)

MOD_ZZ_Z.o: $(MOD_ZZ_Z_HEADERS)
	$(TOOLCHAIN) -c $(MOD_ZZ_Z_CPP_PATH)

RED_Q_Q.o: $(RED_Q_Q_HEADERS)
	$(TOOLCHAIN) -c $(RED_Q_Q_CPP_PATH)

INT_Q_B.o: $(INT_Q_B_HEADERS)
	$(TOOLCHAIN) -c $(INT_Q_B_CPP_PATH)

TRANS_Z_Q.o: $(TRANS_Z_Q_HEADERS)
	$(TOOLCHAIN) -c $(TRANS_Z_Q_CPP_PATH)

TRANS_Q_Z.o: $(TRANS_Q_Z_HEADERS)
	$(TOOLCHAIN) -c $(TRANS_Q_Z_CPP_PATH)

ADD_QQ_Q.o: $(ADD_QQ_Q_HEADERS)
	$(TOOLCHAIN) -c $(ADD_QQ_Q_CPP_PATH)

SUB_QQ_Q.o: $(SUB_QQ_Q_HEADERS)
	$(TOOLCHAIN) -c $(SUB_QQ_Q_CPP_PATH)

MUL_QQ_Q.o: $(MUL_QQ_Q_HEADERS)
	$(TOOLCHAIN) -c $(MUL_QQ_Q_CPP_PATH)

DIV_QQ_Q.o: $(DIV_QQ_Q_HEADERS)
	$(TOOLCHAIN) -c $(DIV_QQ_Q_CPP_PATH)

ADD_PP_P.o: $(ADD_PP_P_HEADERS)
	$(TOOLCHAIN) -c $(ADD_PP_P_CPP_PATH)

SUB_PP_P.o: $(SUB_PP_P_HEADERS)
	$(TOOLCHAIN) -c $(SUB_PP_P_CPP_PATH)

MUL_PQ_P.o: $(MUL_PQ_P_HEADERS)
	$(TOOLCHAIN) -c $(MUL_PQ_P_CPP_PATH)

MUL_Pxk_P.o: $(MUL_PXK_P_HEADERS)
	$(TOOLCHAIN) -c $(MUL_PXK_P_CPP_PATH)

LED_P_Q.o: $(LED_P_Q_HEADERS)
	$(TOOLCHAIN) -c $(LED_P_Q_CPP_PATH)

DEG_P_N.o: $(DEG_P_N_HEADERS)
	$(TOOLCHAIN) -c $(DEG_P_N_CPP_PATH)

FAC_P_Q.o: $(FAC_P_Q_HEADERS)
	$(TOOLCHAIN) -c $(FAC_P_Q_CPP_PATH)

MUL_PP_P.o: $(MUL_PP_P_HEADERS)
	$(TOOLCHAIN) -c $(MUL_PP_P_CPP_PATH)

DIV_PP_P.o: $(DIV_PP_P_HEADERS)
	$(TOOLCHAIN) -c $(DIV_PP_P_CPP_PATH)

MOD_PP_P.o: $(MOD_PP_P_HEADERS)
	$(TOOLCHAIN) -c $(MOD_PP_P_CPP_PATH)

GCF_PP_P.o: $(GCF_PP_P_HEADERS)
	$(TOOLCHAIN) -c $(GCF_PP_P_CPP_PATH)

DER_P_P.o: $(DER_P_P_HEADERS)
	$(TOOLCHAIN) -c $(DER_P_P_CPP_PATH)

NMR_P_P.o: $(NMR_P_P_HEADERS)
	$(TOOLCHAIN) -c $(NMR_P_P_CPP_PATH)

clear:
	rm -f *.o
	rm -f programm
